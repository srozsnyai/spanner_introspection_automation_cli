-- Top Queries used R/W Transactions
SELECT "############ Top Queries used R/W Transactions";
SELECT
 INTERVAL_END,
 TEXT,
 EXECUTION_COUNT,
 AVG_ROWS_SCANNED,
 AVG_LATENCY_SECONDS,
 round(
     SPANNER_SYS.DISTRIBUTION_PERCENTILE(latency_distribution [OFFSET(0)], 99.0) * 1000
 ) as latency_p99,
 round(
     SPANNER_SYS.DISTRIBUTION_PERCENTILE(latency_distribution [OFFSET(0)], 95.0) * 1000
 ) as latency_p95,
 round(
     SPANNER_SYS.DISTRIBUTION_PERCENTILE(latency_distribution [OFFSET(0)], 50.0) * 1000
 ) as latency_p50,
 TEXT_FINGERPRINT,
 AVG_CPU_SECONDS,
 CANCELLED_OR_DISCONNECTED_EXECUTION_COUNT,
 TIMED_OUT_EXECUTION_COUNT,
 ALL_FAILED_EXECUTION_COUNT,
 ALL_FAILED_AVG_LATENCY_SECONDS,
 REQUEST_TAG,
 RUN_IN_RW_TRANSACTION_EXECUTION_COUNT
FROM
 SPANNER_SYS.QUERY_STATS_TOP_HOUR
WHERE
 INTERVAL_END = @HOUR_INTERVAL
 AND RUN_IN_RW_TRANSACTION_EXECUTION_COUNT > 1
ORDER BY
 avg_latency_seconds,  RUN_IN_RW_TRANSACTION_EXECUTION_COUNT DESC;

-- Top Queries in RO Transaction Scope
SELECT "############ Top Queries in RO Transaction Scope";
SELECT INTERVAL_END, TEXT, EXECUTION_COUNT, AVG_ROWS_SCANNED, AVG_LATENCY_SECONDS,
round(SPANNER_SYS.DISTRIBUTION_PERCENTILE(latency_distribution[OFFSET(0)], 99.0) * 1000) as latency_p99 ,
round(SPANNER_SYS.DISTRIBUTION_PERCENTILE(latency_distribution[OFFSET(0)], 95.0) * 1000) as latency_p95,
round(SPANNER_SYS.DISTRIBUTION_PERCENTILE(latency_distribution[OFFSET(0)], 50.0) * 1000) as latency_p50
FROM SPANNER_SYS.QUERY_STATS_TOP_HOUR
WHERE
 INTERVAL_END = @HOUR_INTERVAL
 AND RUN_IN_RW_TRANSACTION_EXECUTION_COUNT = 0
ORDER BY avg_latency_seconds DESC;

-- Top Transactions
SELECT "############ Top Transactions";
SELECT
INTERVAL_END,
TRANSACTION_TAG,
FPRINT,
READ_COLUMNS,
WRITE_CONSTRUCTIVE_COLUMNS,
WRITE_DELETE_TABLES,
ATTEMPT_COUNT,
COMMIT_ATTEMPT_COUNT,
COMMIT_ABORT_COUNT,
COMMIT_RETRY_COUNT,
COMMIT_FAILED_PRECONDITION_COUNT,
AVG_PARTICIPANTS,
AVG_TOTAL_LATENCY_SECONDS,
ROUND(SPANNER_SYS.DISTRIBUTION_PERCENTILE(TOTAL_LATENCY_DISTRIBUTION[
OFFSET
  (0)],
  99.0) * 1000) AS latency_p99,
ROUND(SPANNER_SYS.DISTRIBUTION_PERCENTILE(TOTAL_LATENCY_DISTRIBUTION[
OFFSET
  (0)],
  95.0) * 1000) AS latency_p95,
ROUND(SPANNER_SYS.DISTRIBUTION_PERCENTILE(TOTAL_LATENCY_DISTRIBUTION[
OFFSET
  (0)],
  50.0) * 1000) AS latency_p50
FROM
SPANNER_SYS.TXN_STATS_TOP_HOUR
WHERE
 INTERVAL_END = @HOUR_INTERVAL
 AND avg_total_latency_seconds IS NOT NULL
ORDER BY
 avg_total_latency_seconds DESC;

-- Lock Statistics
SELECT "############ Lock Statistics";
SELECT
CAST(s.row_range_start_key AS STRING) AS row_range_start_key,
t.total_lock_wait_seconds,
s.lock_wait_seconds,
s.lock_wait_seconds / t.total_lock_wait_seconds frac_of_total,
s.sample_lock_requests
FROM
spanner_sys.lock_stats_total_hour t,
spanner_sys.lock_stats_top_hour s
WHERE
 t.INTERVAL_END = @HOUR_INTERVAL
 AND s.interval_end = t.interval_end
ORDER BY
s.lock_wait_seconds DESC;
